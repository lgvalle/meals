version: 2

defaults: &defaults
  working_directory: ~/meals
  docker:
    - image: circleci/android:api-28-alpha
  environment:
    JVM_OPTS: -Xmx3200m
    GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2
    TERM: dumb

restore_cache: &restore_cache
  key: gradle-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

save_cache: &save_cache
  paths:
    - ~/.gradle/caches
    - ~/.gradle/wrapper
    - /opt/android/sdk/build-tools
  key: gradle-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

attach_workspace: &attach_workspace
  at: ~/meals

jobs:
  prepare:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore_cache
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache: *save_cache
      - persist_to_workspace:
          root: .
          paths:
            - .

  assembleDebug:
    <<: *defaults
    steps:
      - attach_workspace: *attach_workspace
      - restore_cache: *restore_cache
      - run:
          name: AssembleDebug
          command: ./gradlew assembleDebug
      - store_artifacts:
          path: app/build/outputs/apk/debug
          destination: artifacts
      - persist_to_workspace:
          root: .
          paths:
            - app/build
            - build

  assembleDebugAndroidTest:
    <<: *defaults
    steps:
      - attach_workspace: *attach_workspace
      - restore_cache: *restore_cache
      - run:
          name: AssembleDebugAndroidTest
          command: ./gradlew assembleDebugAndroidTest
      - store_artifacts:
          path: app/build/outputs/apk/androidTest
          destination: artifacts
      - persist_to_workspace:
          root: .
          paths:
            - app/build
            - build
  test:
    <<: *defaults
    steps:
      - attach_workspace: *attach_workspace
      - restore_cache: *restore_cache
      - run:
          name: Run unit tests
          command: ./gradlew test
      - store_test_results:
          path: app/build/test-results
  test_instrumented:
    <<: *defaults
    steps:
      - attach_workspace: *attach_workspace
      - restore_cache: *restore_cache
      - run:
          name: Store Google Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
          name: Authorize gcloud and set config defaults
          command: |
            sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run:
          name: Test with Firebase Test Lab
          command: >
            sudo gcloud firebase test android run \
              --type instrumentation \
              --app app/build/outputs/apk/debug/app-debug.apk \
              --test app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk \
              --device model=Pixel2,version=28,locale=en_US,orientation=portrait \
              --timeout 30m \
              --results-bucket cloud-test-${GOOGLE_PROJECT_ID}

      - run:
          name: Install gsutil dependency and copy test results data
          command: |
            rm ${HOME}/gcloud-service-key.json
            mkdir firebase_test_results
            sudo pip install -U crcmod
            sudo gsutil -m cp -r -U "gs://cloud-test-${GOOGLE_PROJECT_ID}/*" "firebase_test_results"
      - store_artifacts:
          path: firebase_test_results
      - store_test_Results:
          path: firebase_test_results

workflows:
  version: 2
  build_and_test:
    jobs:
      - prepare
      - assembleDebug:
          requires:
          - prepare
      - assembleDebugAndroidTest:
          requires:
          - assembleDebug
      - test:
          requires:
          - assembleDebug
      - test_instrumented:
          requires:
          - assembleDebug
          - assembleDebugAndroidTest




